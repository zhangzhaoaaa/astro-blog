---
// Remove trailing slash if exists and split path
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");
const segments = currentUrlPath.split("/").slice(1); // [ 'tags', '<slug>', '2' ]

type Crumb = { label: string; href: string | null };
const crumbs: Crumb[] = [];

if (segments.length > 0) {
  const [first, second, third] = segments;

  const mapFirstLabel = (s: string) =>
    s === "about"
      ? "关于"
      : s === "posts"
        ? "文章"
        : s === "tags"
          ? "标签"
          : s === "search"
            ? "搜索"
            : s;

  if (first === "posts") {
    // Posts index or pagination
    if (second && !isNaN(Number(second))) {
      crumbs.push({ label: `Posts (page ${second})`, href: null });
    } else {
      crumbs.push({ label: mapFirstLabel(first), href: null });
    }
  } else if (first === "tags") {
    // Tags index or tag detail pagination
    if (!second) {
      crumbs.push({ label: mapFirstLabel(first), href: null });
    } else if (second && third && !isNaN(Number(third))) {
      crumbs.push({ label: mapFirstLabel(first), href: "/tags" });
      const pageSuffix = Number(third) === 1 ? "" : ` (page ${third})`;
      crumbs.push({ label: `${decodeURIComponent(second)}${pageSuffix}`.trim(), href: null });
    } else {
      crumbs.push({ label: mapFirstLabel(first), href: "/tags" });
      crumbs.push({ label: decodeURIComponent(second), href: null });
    }
  } else {
    // Generic builder with cumulative hrefs
    segments.forEach((seg, idx) => {
      const label = idx === 0 ? mapFirstLabel(seg) : decodeURIComponent(seg);
      const href = idx === segments.length - 1 ? null : `/${segments.slice(0, idx + 1).join("/")}`;
      crumbs.push({ label, href });
    });
  }
}
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">首页</a>
      <span aria-hidden="true">&raquo;</span>
    </li>
    {crumbs.map((c, index) => (
      index === crumbs.length - 1 ? (
        <li>
          <span class={`${index > 0 ? "lowercase" : "capitalize"}`} aria-current="page">
            {c.label}
          </span>
        </li>
      ) : (
        <li>
          <a href={c.href!}>{c.label}</a>
          <span aria-hidden="true">&raquo;</span>
        </li>
      )
    ))}
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mb-1 mt-8 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
