---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";
import ShareLinks from "@components/ShareLinks.astro";
import TableOfContents from "@components/TableOfContents.astro";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const {
  title,
  author,
  description,
  ogImage,
  canonicalURL,
  pubDatetime,
  modDatetime,
  tags,
} = post.data;

const { Content, remarkPluginFrontmatter, headings } = await post.render();

const ogImageUrl = typeof ogImage === "string" ? ogImage : ogImage?.src;
const ogUrl = new URL(
  ogImageUrl ?? `/posts/${slugifyStr(title)}.png`,
  Astro.url.origin
).href;

const layoutProps = {
  title,
  author,
  description,
  pubDatetime,
  modDatetime,
  canonicalURL,
  ogImage: ogUrl,
  scrollSmooth: true,
};
---

<Layout {...layoutProps}>
  <Header />
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button
      class="focus-outline mb-2 mt-8 flex hover:opacity-75"
      onclick="()=>history.push('/')"
    >
      <svg xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>返回</span>
    </button>
  </div>
  <main id="main-content">
    <div class="sticky top-0 z-20 bg-skin-card/80 backdrop-blur supports-[backdrop-filter]:bg-skin-card/60 lg:static">
      <div class="mx-auto w-full max-w-3xl px-4 py-2 flex items-start justify-between gap-2">
        <h1 transition:name={slugifyStr(title)} class="post-title">{title}</h1>
        <div class="relative lg:hidden">
          <button
            id="mobile-toc-toggle"
            class="rounded-full border border-skin-line px-3 py-1 text-sm bg-skin-card text-skin-base shadow flex items-center gap-1"
            aria-expanded="false"
            aria-controls="mobile-toc-panel"
          >
            <span>目录</span>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path d="M7 10l5 5 5-5z"></path></svg>
          </button>
          <div
            id="mobile-toc-panel"
            class="absolute right-0 mt-2 w-64 max-h-80 overflow-auto rounded-md bg-skin-card text-skin-base shadow-lg border border-skin-line hidden"
          >
            <nav class="p-2">
              <ul class="space-y-1">
                {headings?.map((heading: any) => (
                  <li>
                    <a
                      class={`block px-3 py-2 hover:bg-skin-fill ${heading?.depth >= 3 ? 'pl-4 text-sm' : ''}`}
                      href={`#${heading.slug}`}
                    >
                      {heading?.text}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          </div>
        </div>
      </div>
    </div>
    <Datetime
      pubDatetime={pubDatetime}
      modDatetime={modDatetime}
      className="my-2"
      minutesRead={remarkPluginFrontmatter.minutesRead}
      wordCount={remarkPluginFrontmatter.wordCount}
    />

    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>
    <!-- <ul class="my-8">
      {tags.map(tag => <Tag tag={slugifyStr(tag)} />)}
    </ul> -->

    <div
      class="flex flex-col-reverse items-center justify-between gap-6 sm:flex-row-reverse sm:items-end sm:gap-4"
    >
      <button
        id="back-to-top"
        class="focus-outline whitespace-nowrap py-1 hover:opacity-75"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rotate-90">
          <path
            d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
          ></path>
        </svg>
        <span>返回顶部</span>
      </button>
    </div>
    <!-- AddToAny BEGIN -->
    <div class="a2a_kit a2a_kit_size_32 a2a_default_style">
      <a class="a2a_dd" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_wechat"></a>
      <a class="a2a_button_sina_weibo"></a>
      <a class="a2a_button_x"></a>
      <a class="a2a_button_copy_link"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_email"></a>
    </div>
    <script async src="https://static.addtoany.com/menu/page.js"></script>
    <!-- AddToAny END -->

    <div class="giscus"></div>
    <script
      src="https://giscus.app/client.js"
      data-repo="zhangzhaoaaa/blog-giscus"
      data-repo-id="R_kgDOLEKA6g"
      data-category="Announcements"
      data-category-id="DIC_kwDOLEKA6s4CcYgs"
      data-mapping="pathname"
      data-strict="0"
      data-reactions-enabled="1"
      data-emit-metadata="0"
      data-input-position="bottom"
      data-theme="preferred_color_scheme"
      data-lang="zh-CN"
      crossorigin="anonymous"
      async></script>
  </main>
-  <aside style="position: fixed; top: 20rem;right:2rem">
+  <aside class="hidden lg:block" style="position: fixed; top: 20rem; right: 2rem">
    <TableOfContents headings={headings} />
  </aside>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold text-skin-accent;
  }
</style>

<script is:inline>
  /** Attaches copy buttons to code blocks in the document,
   * allowing users to copy code easily. */
  function attachCopyButtons() {
    let copyButtonLabel = "Copy";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";

      let copyButton = document.createElement("button");
      copyButton.className =
        "copy-code absolute right-3 -top-3 rounded bg-skin-card px-2 py-1 text-xs leading-4 text-skin-base font-medium";
      copyButton.innerHTML = copyButtonLabel;
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);

      // wrap codebock with relative parent element
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }

    async function copyCode(block, button) {
      let code = block.querySelector("code");
      let text = code.innerText;

      await navigator.clipboard.writeText(text);

      // visual feedback that task is completed
      button.innerText = "Copied";

      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  }
  attachCopyButtons();
  document.addEventListener("astro:after-swap", attachCopyButtons);

  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    document.querySelector("#back-to-top")?.addEventListener("click", () => {
      document.body.scrollTop = 0; // For Safari
      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
    });
  }
  backToTop();
  document.addEventListener("astro:after-swap", backToTop);
  
  /** Mobile TOC toggle logic */
  function initMobileToc() {
    const btn = document.getElementById("mobile-toc-toggle");
    const panel = document.getElementById("mobile-toc-panel");
    if (!btn || !panel) return;

    const close = () => {
      panel.classList.add("hidden");
      btn.setAttribute("aria-expanded", "false");
    };
    const open = () => {
      panel.classList.remove("hidden");
      btn.setAttribute("aria-expanded", "true");
    };

    btn.addEventListener("click", (e) => {
      e.stopPropagation();
      if (panel.classList.contains("hidden")) open();
      else close();
    });
    document.addEventListener("click", (e) => {
      const target = e.target;
      if (!panel.contains(target) && target !== btn) close();
    });
    panel.querySelectorAll("a").forEach((a) => {
      a.addEventListener("click", () => close());
    });
  }
  initMobileToc();
  document.addEventListener("astro:after-swap", initMobileToc);
 </script>

 <style>
  .layout {
    display: grid;
    grid-template-columns: 3fr 1fr;
    gap: 2rem;
  }
  article {
    padding: 1rem;
  }
  aside {
    padding: 1rem;
  }
</style>
