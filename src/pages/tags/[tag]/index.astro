---
import { getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getPostsByTag from "@utils/getPostsByTag";
import getPagination from "@utils/getPagination";
import getUniqueTags from "@utils/getUniqueTags";
import { slugifyStr } from "@utils/slugify";

export const prerender = false;
// Runtime data fetching for server output
const { tag } = Astro.params;

if (!tag) {
  return Astro.redirect("/404");
}
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Find posts for this tag
const postsByTag = getPostsByTag(allPosts, tag as string);

if (postsByTag.length === 0) {
  return Astro.redirect("/404");
}

// Derive a human-readable tag name from taxonomy if available
const tagSlug = slugifyStr(tag as string);
const matched = getUniqueTags(allPosts).find((t) => t.tag === tagSlug);
const tagName: string = matched?.tagName ?? (tag as string);

const pagination = getPagination({ posts: postsByTag, page: 1, isIndex: true });
---

<TagPosts {...pagination} {tag} {tagName} />
